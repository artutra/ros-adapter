version: '2.0'

services:
  postgres_db:
    image: postgres:9.6.9
    command: postgres -c config_file=/etc/postgresql.conf
    ports:
      # We'll bind our host's port 5432 to postgres's port 5432, so we can use
      # our database IDEs with it:
      - 5432:5432
    volumes:
      # - ./postgres_db/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./postgres_db/postgresql.conf:/etc/postgresql.conf
      - ./postgres_db/pg_hba.conf:/etc/pg_hba.conf
      # Mount the DB dumps folder into the container, to be able to create & access database dumps:
      # - ./postgres_db/dumps:/db/dumps
      # Mount out tmp folder, we might want to have access to something there during development:
      # - ./tmp:/tmp
      # Mount our 'restoredb' script:
      # - ./bin/restoredb:/bin/restoredb:ro
      # Mount our 'dumpdb' script:
      # - ./bin/dumpdb:/bin/dumpdb:ro
      # We'll mount the 'postgres-data' volume into the location Postgres stores it's data:
      - ./postgres_db/data:/var/lib/postgresql/data
      - ./postgres_db/dbexport.pgsql:/db/dbexport.pgsql
      
  ros:
    build: ./ros
    command: npm start
    ports:
      - 9080:9080
    volumes:
      - ./ros/src:/usr/src/app/src
      - ./ros/data:/usr/src/app/data
      - ./ros/tsconfig.json:/usr/src/app/tsconfig.json
    depends_on:
      - postgres_db
  ros_adapter:
    build: ./ros_adapter
    command: npm start
    volumes:
      - ./ros_adapter/src:/usr/src/app/src
      - ./ros/data/keys:/usr/src/app/keys
    depends_on:
      - postgres_db
      - ros